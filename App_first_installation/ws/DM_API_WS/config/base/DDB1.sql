/*    This SQL DDL script was generated by Microsoft Visual Studio (Release Date: LOCAL BUILD). */

/*    Driver Used : Microsoft Visual Studio - Microsoft SQL Server Driver.                    */
/*    Document    : \\titano\Progetti\SistanHub\Progettazione\DDB.vsd.                        */
/*    Time Created: 18 February 2019 15:52.                                                   */
/*    Operation   : From Visio Generate Wizard.                                               */
/*    Connected data source : No connection.                                                  */
/*    Connected server      : No connection.                                                  */
/*    Connected database    : Not applicable.                                                 */



SET QUOTED_IDENTIFIER ON

go


/* Create new table "AttTEXT_FREE@SDMX".                                                      */
/* "AttTEXT_FREE@SDMX" : Tabella per gli attributi Free text                                  */
/* 	"IDMember" : Id del record                                                                */
/* 	"Code" : Codice dell'attributo                                                            */
/* 	"Ordering" : Ordinamento del codice all'interno dell'attributo                            */
/* 	"TimeStmp" : Timestamp di inserimento del record                                          */  
create table "AttTEXT_FREE@SDMX" ( 
	"IDMember" int identity not null,
	"Code" nvarchar(500) not null,
	"Ordering" int null,
	"TimeStmp" datetime not null)  

go

alter table "AttTEXT_FREE@SDMX"
	add constraint "AttTEXT_FREE@SDMX_PK" primary key ("IDMember")   


go

/* Create new table "localised_CatCube".                                                      */
/* "localised_CatCube" : Tabella per la localizzazione delle etichette dei cubi               */
/* 	"IDMember" : Id dell'oggetto a cui l'etichetta si riferisce                               */
/* 	"TwoLetterISO" : Codice ISO della lingua localizzata                                      */
/* 	"Valore" : Valore dell'etichetta                                                          */  
create table "localised_CatCube" ( 
	"IDMember" int not null,
	"TwoLetterISO" varchar(2) not null,
	"Valore" nvarchar(2000) not null) ON 'PRIMARY'  

go

alter table "localised_CatCube"
	add constraint "PK_loc_CatCube" primary key nonclustered ("IDMember", "TwoLetterISO")   


go

/* Create new table "localised_CatDataFlow".                                                  */
/* "localised_CatDataFlow" : Tabella per la localizzazione delle etichette dei dataflow       */
/* 	"IDMember" : Id dell'oggetto a cui l'etichetta si riferisce                               */
/* 	"TwoLetterISO" : Codice ISO della lingua localizzata                                      */
/* 	"Valore" : Valore dell'etichetta                                                          */  
create table "localised_CatDataFlow" ( 
	"IDMember" int not null,
	"TwoLetterISO" varchar(2) not null,
	"Valore" nvarchar(2000) not null) ON 'PRIMARY'  

go

alter table "localised_CatDataFlow"
	add constraint "PK_loc_CatDataFlow" primary key nonclustered ("IDMember", "TwoLetterISO")   


go

/* Create new table "ComponentMapping".                                                       */
/* "ComponentMapping" : Tabella che memorizza la mappatura di un file csv sui componenti SDMX di un cubo */
/* 	"IDComponent" : Id del componente della mappatura                                         */
/* 	"IDMapping" : Id della mappatura di cui la componenete fa parte                           */
/* 	"ColumnName" : Nome della colonna (null in caso di file csv senza intestazione)           */
/* 	"CubeComponentCode" : Codice del componente del cubo                                      */
/* 	"CubeComponentType" : Tipo del componente del cubo che fa parte del mapping               */  
/* 	"MappingType" : Tipo del mapping: Default, Fixed, Concat, CalculatedExpression            */  
/* 	"Expression" : Espressione per il calcolo per tipi diversi da Default		              */  
create table "ComponentMapping" ( 
	"IDComponent" int identity not null,
	"IDMapping" int not null,
	"ColumnName" nvarchar(255) null,
	"CubeComponentCode" varchar(50) not null,
	"CubeComponentType" varchar(50) not null,
	"MappingType" varchar(50) not null,
	"Expression" nvarchar(max) null) ON 'PRIMARY'  

go

alter table "ComponentMapping"
	add constraint "PK_ComponentMapping" primary key nonclustered ("IDComponent")   


go

/* Create new table "CatDataFlowColumns".                                                     */
/* "CatDataFlowColumns" : Memorizza i nomi delle colonne di un dataflow al momento della sua creazione nel Dataflow Builder */
/* 	"IDDataFlow" : ID del dataflow                                                            */
/* 	"ColumnName" : Nome della colonna                                                         */  
/* 	"ColumnOrder" : Ordinamento relativo della colonna                                        */  
create table "CatDataFlowColumns" ( 
	"IDDataFlow" int not null,
	"ColumnName" nvarchar(255) not null,
	"ColumnOrder" int null) ON 'PRIMARY'  

go

alter table "CatDataFlowColumns"
	add constraint "PK_CatDataflowColumns" primary key nonclustered ("ColumnName", "IDDataFlow")   


go

/* Create new table "CatCube".                                                                */
/* "CatCube" : Contiene le informazioni generali sui cubi                                     */
/* 	"IDCube" : Id del cubo                                                                    */
/* 	"Code" : Identificativo del cubo                                                          */
/* 	"IDCat" : Id della categoria del CS di lavoro in cui l'oggetto è stato categorizzato      */
/* 	"DSDCode" : Concatenazione di ID + agency + version della DSD a partire da cui è stato creato il cubo */
/* 	"LastUpdated" : Data dell'ultimo aggiornamento                                            */
/* 	"HasEmbargoedData" : Indica se il cubo ha dati embargati                                  */  
create table "CatCube" ( 
	"IDCube" int identity not null,
	"Code" nvarchar(50) not null,
	"IDCat" int null,
	"DSDCode" nvarchar(250) null,
	"LastUpdated" datetime not null,
	"HasEmbargoedData" bit not null) ON 'PRIMARY'  

go

alter table "CatCube"
	add constraint "PK_CatCube" primary key nonclustered ("IDCube")   


go

/* Create new table "Loading".                                                                */
/* "Loading" : Tabella per la memorizzazione delle operazioni di loading per un cubo          */
/* 	"IDLoad" : Id dell'operazione                                                             */
/* 	"IDCube" : Id del cubo a cui il caricamento si riferisce                                  */
/* 	"RecordCount" : Numero di record caricati                                                 */
/* 	"Filename" : Nome del file caricato                                                       */
/* 	"TmpTableName" : Nome della tabella temporanea dove è stato caricato il file              */
/* 	"TimeStmp" : Timestamp dell'operazione                                                    */  
create table "Loading" ( 
	"IDLoad" int identity not null,
	"IDCube" int not null,
	"RecordCount" int not null,
	"Filename" nvarchar(255) not null,
	"TmpTableName" nvarchar(255) not null,
	"TimeStmp" datetime not null) ON 'PRIMARY'  

go

alter table "Loading"
	add constraint "PK_Loading" primary key nonclustered ("IDLoad")   


go

/* Create new table "CatDim".                                                                 */
/* "CatDim" : Contiene le dimensioni di un cubo                                               */
/* 	"IDDim" : Id della dimensione                                                             */
/* 	"IDCube" : ID del cubo di cui la dimensione fa parte                                      */
/* 	"Code" : Codice della dimensione                                                          */
/* 	"CodelistCode" : Id+Agency+Version della codelist associata. Null se è la dimensione temporale. */
/* 	"MemberTable" : Nome della tabella fisica in cui la dimensione è memorizzata              */
/* 	"ColName" : Nome fisico della colonna della tabella FactS in cui è memorizzata la dimensione */
/* 	"IsTimeSeriesDim" : Indica se la dimensione è la TimeSeries                               */
/* 	"TimeStmp" : Timestamp di creazione del record                                            */  
create table "CatDim" ( 
	"IDDim" int identity not null,
	"IDCube" int not null,
	"Code" varchar(50) not null,
	"CodelistCode" varchar(255) null,
	"MemberTable" varchar(50) not null,
	"ColName" varchar(50) not null,
	"IsTimeSeriesDim" bit not null,
	"TimeStmp" datetime not null) ON 'PRIMARY'  

go

alter table "CatDim"
	add constraint "PK_CatDim" primary key nonclustered ("IDDim")   


go

/* Create new table "CatDataFlow".                                                            */
/* "CatDataFlow" : Contiene le informazioni sui dataflow, tranne la categorizzazione che è memorizzata direttamente sul MSDB */
/* 	"IDDataFlow" : Id del dataflow                                                            */
/* 	"IDCube" : Id del cubo                                                                    */
/* 	"ID" : Codice del dataflow                                                                */
/* 	"Agency" : Agenzia del dataflow                                                           */
/* 	"Version" : Version del dataflow                                                          */
/* 	"Filter" : Condizione della WHERE nella query del dataflow builder. Vale NULL se il Dataflow non è filtrato */
/* 	"LastUpdated" : Data dell'ultimo aggiornamento                                            */
/* 	"HasTranscoding" : Indica se il dataflow ha un transcoding associato                      */  
create table "CatDataFlow" ( 
	"IDDataFlow" int identity not null,
	"IDCube" int not null,
	"ID" nvarchar(50) not null,
	"Agency" varchar(50) not null,
	"Version" varchar(10) not null,
	"Filter" nvarchar(max) null,
	"LastUpdated" datetime not null,
	"HasTranscoding" bit not null,
	"HasContentConstraints" bit not null) ON 'PRIMARY'  

go

alter table "CatDataFlow"
	add constraint "PK_CatDataFlow" primary key nonclustered ("IDDataFlow")   


go

/* Create new table "CatAttDim".                                                              */
/* "CatAttDim" : Mette in collegamento agli attributi con le dimensioni ad essi collegati per attributi con Attachment Level Dimension o Group */
/* 	"IDAtt" : Id dell'attributo                                                               */
/* 	"IDDim" : Id della dimensione                                                             */  
create table "CatAttDim" ( 
	"IDAtt" int not null,
	"IDDim" int not null) ON 'PRIMARY'  

go

alter table "CatAttDim"
	add constraint "PK_CatAttDim" primary key nonclustered ("IDAtt", "IDDim")   


go

/* Create new table "CatAtt".                                                                 */
/* "CatAtt" : Contiene gli attributi di un cubo                                               */
/* 	"IDAtt" : Id dell'attributo                                                               */
/* 	"IDCube" : ID del cubo di cui l'attributo fa parte                                        */
/* 	"Code" : Codice dell'attributo                                                            */
/* 	"CodelistCode" : Id+Agency+Version della codelist associata. Null se è un attributo non codificato. */
/* 	"MemberTable" : Nome della tabella fisica in cui l'attributo è memorizzato                */
/* 	"ColName" : Nome fisico della colonna della tabella FactS o della tabella FiltS in cui è memorizzato l'attributo (a seconda dell'attachment level) */
/* 	"IsMandatory" : Indica se l'attributo è mandatory                                         */
/* 	"IsTid" : Indica se l'attributo è l'attributo speciale TID (TableIdentifier)              */
/* 	"AttachmentLevel" : Attachment Level dell'attributo                                       */
/* 	"TimeStmp" : Timestamp di creazione del record                                            */  
create table "CatAtt" ( 
	"IDAtt" int identity not null,
	"IDCube" int not null,
	"Code" varchar(50) not null,
	"CodelistCode" varchar(255) null,
	"MemberTable" varchar(50) not null,
	"ColName" varchar(50) not null,
	"IsMandatory" bit not null,
	"IsTid" bit not null,
	"AttachmentLevel" varchar(50) not null,
	"TimeStmp" datetime not null) ON 'PRIMARY'  

go

alter table "CatAtt"
	add constraint "PK_CatAtt" primary key nonclustered ("IDAtt")   


go

/* Create new table "Mapping".                                                                */
/* "Mapping" : Tabella per memorizzare le informazioni generali della  mappatura di un file csv sulle componenti SDMX di un Cubo */
/* 	"IDMapping" : Id della mappatura                                                          */
/* 	"IDCube" : Id del cubo a cui la mappatura si riferisce                                    */
/* 	"TimeStmp" : Timestamp di generazione della mappatura                                     */
/* 	"Name" : Nome della mappatura                                                             */
/* 	"Description" : Descrizione della mappatura                                               */
/* 	"Tid" : Eventuale valore del tid inserito in fase di mappatura                            */  
/* 	"CSVSeparator" : Separatore nel file usato per il mapping               */  
/* 	"CSVDelimiter" : Delimitatore nel file usato per il mapping               */  
/* 	"HasHeader" : Se il file usato per il mapping ha l'header o meno               */  
/* 	"HasSpecialTimePeriod" : Se il file usato per il mapping ha frequenze in formato .STAT o meno               */  
/*  "XmlFilePath" : File path del file xml di mapping per mappature di tipo Excel			  */
create table "Mapping" ( 
	"IDMapping" int identity not null,
	"IDCube" int not null,
	"TimeStmp" datetime not null,
	"Name" nvarchar(255) not null,
	"Description" nvarchar(2000) null,
	"Tid" varchar(50) null,
	"CSVSeparator" char null,
	"CSVDelimiter" char null,
	"HasHeader" bit null,
	"HasSpecialTimePeriod" bit null,
	"XmlFilePath" nvarchar(max)) ON 'PRIMARY'  

go

alter table "Mapping"
	add constraint "PK_FileMapping" primary key nonclustered ("IDMapping")   


go

/* Create new table "CatCategory".                                                            */
/* "CatCategory" : Tabella per modellare una category del Category Scheme di lavoro           */
/* 	"IDCat" : Id della category                                                               */
/* 	"CatCode" : Codice della category                                                         */
/* 	"IDParent" : Eventuale id del padre                                                       */
/* 	"Ord" : Ordinamento della category                                                        */  
create table "CatCategory" ( 
	"IDCat" int identity not null,
	"CatCode" varchar(50) not null,
	"IDParent" int null,
	"Ord" varchar(10) null) ON 'PRIMARY'  

go

alter table "CatCategory"
	add constraint "PK_CatCategory" primary key nonclustered ("IDCat")   


go

/* Create new table "localised_CatCategory".                                                  */
/* "localised_CatCategory" : Tabella per la localizzazione delle etichette delle categorie    */
/* 	"IDMember" : Id dell'oggetto a cui l'etichetta si riferisce                               */
/* 	"TwoLetterISO" : Codice ISO della lingua localizzata                                      */
/* 	"Valore" : Valore dell'etichetta                                                          */  
create table "localised_CatCategory" ( 
	"IDMember" int not null,
	"TwoLetterISO" varchar(2) not null,
	"Valore" nvarchar(2000) not null) ON 'PRIMARY'  

go

alter table "localised_CatCategory"
	add constraint "PK_loc_CattAtt" primary key nonclustered ("IDMember", "TwoLetterISO")   


go

/* Create new table "CatMeas".                                                                */
/* "CatMeas" : Contiene le misure di un cubo                                                  */
/* 	"IDMeas" : Id della misura                                                                */
/* 	"IDCube" : ID del cubo di cui la misura fa parte                                          */
/* 	"Code" : Codice della dimensione                                                          */
/* 	"ColName" : Nome fisico della colonna della tabella FactS in cui è memorizzata la misura  */
/* 	"IsAlphanumeric" : Indica se il valore della misura può essere alfanumerico               */
/* 	"TimeStmp" : Timestamp di creazione del record                                            */  
create table "CatMeas" ( 
	"IDMeas" int identity not null,
	"IDCube" int not null,
	"Code" varchar(50) not null,
	"ColName" varchar(50) not null,
	"IsAlphanumeric" bit default 1 not null,
	"TimeStmp" datetime not null) ON 'PRIMARY'  

go

alter table "CatMeas"
	add constraint "PK_CatMeasure" primary key nonclustered ("IDMeas")   


go

/* Create new table "DimTIME_PERIOD".                                                         */
/* "DimTIME_PERIOD" : Tabella per gli attributi Free text                                     */
/* 	"IDMember" : Id del record                                                                */
/* 	"Code" : Codice della dimensione                                                          */
/* 	"Ordering" : Ordinamento del codice all'interno della dimensione                          */
/* 	"TimeStmp" : Timestamp di inserimento del record                                          */  
create table "DimTIME_PERIOD" ( 
	"IDMember" int identity not null,
	"Code" nvarchar(500) not null,
	"Ordering" int null,
	"TimeStmp" datetime not null)  

go

alter table "DimTIME_PERIOD"
	add constraint "DimTIME_PERIOD_PK" primary key ("IDMember")   


go

create index "IDX_CODE" on "DimTIME_PERIOD" ("Code") 

/* Create new table "DDB_VERSION".                                                         */
/* "DDB_VERSION" : Tabella per il versionamento del DB                                     */
/* 	"MAJOR" : Campo principale della versione (es. 1 in 1.0)                              */
/* 	"MINOR" : Campo secondario della versione (es. 0 in 1.0)                              */
/* 	"UPGRADE_STAMP" : Data dell'ultimo aggiornamento					                  */
CREATE TABLE DDB_VERSION(
	MAJOR bigint NOT NULL,
	MINOR bigint NOT NULL,
	UPGRADE_STAMP datetime NOT NULL)

GO 

alter table "DDB_VERSION"
	add CONSTRAINT PK_DDB_VERSION PRIMARY KEY CLUSTERED ([MAJOR] ASC, [MINOR] ASC)

GO

/* Create new table "UploadOps".                                                              */
/* "UploadOps" : Tabella per gestire le operazioni di upload concorrenti sullo stesso cubo    */
/* 	"IDCube" : Id del cubo                                                                    */
/* 	"UploadDate" : Data di inizio dell'operazione di caricamento                              */  
create table "UploadOps" ( 
	"IDCube" int not null,
	"UploadDate" datetime not null)  

go

alter table "UploadOps"
	add constraint "UploadOps_PK" primary key ("IDCube", "UploadDate")   


go

/*Initializing version */
IF ((SELECT COUNT(*) FROM DDB_VERSION) <= 0)
BEGIN

	INSERT INTO DDB_VERSION (MAJOR, MINOR, UPGRADE_STAMP) VALUES (1, 2, getdate())

END

/* Add the remaining keys, constraints and indexes for the table "AttTEXT_FREE@SDMX".         */
alter table "AttTEXT_FREE@SDMX" add constraint "UQ_TextFree_Code" unique (
	"Code")  


go

/* Add the remaining keys, constraints and indexes for the table "CatCube".                   */
alter table "CatCube" add constraint "UQ_Cube_Code" unique (
	"Code")  


go

/* Add the remaining keys, constraints and indexes for the table "CatDim".                    */
alter table "CatDim" add constraint "UQ_Dim_Code" unique (
	"IDCube",
	"Code")  


go

/* Add the remaining keys, constraints and indexes for the table "CatDataFlow".               */
alter table "CatDataFlow" add constraint "UQ_DF_Key" unique (
	"Agency",
	"ID",
	"Version")  


go

/* Add the remaining keys, constraints and indexes for the table "CatAtt".                    */
alter table "CatAtt" add constraint "UQ_Att_Code" unique (
	"IDCube",
	"Code")  


go

/* Add the remaining keys, constraints and indexes for the table "Mapping".                   */
alter table "Mapping" add constraint "UQ_Name" unique (
	"Name")  


go

/* Add the remaining keys, constraints and indexes for the table "CatCategory".               */
alter table "CatCategory" add constraint "UQ_CatCode" unique (
	"CatCode")  


go

/* Add the remaining keys, constraints and indexes for the table "CatMeas".                   */
alter table "CatMeas" add constraint "UQ_Meas_Code" unique (
	"IDCube",
	"Code")  


go

/* Add the remaining keys, constraints and indexes for the table "DimTIME_PERIOD".            */
alter table "DimTIME_PERIOD" add constraint "UQ_TimePeriod_Code" unique (
	"Code")  


go

/* Add foreign key constraints to table "localised_CatCube".                                  */
alter table "localised_CatCube"
	add constraint "CatCube_localised_CatCube_FK1" foreign key (
		"IDMember")
	 references "CatCube" (
		"IDCube") on update no action on delete cascade  

go

/* Add foreign key constraints to table "localised_CatDataFlow".                              */
alter table "localised_CatDataFlow"
	add constraint "CatDataFlow_localised_CatDataFlow_FK1" foreign key (
		"IDMember")
	 references "CatDataFlow" (
		"IDDataFlow") on update no action on delete cascade  

go

/* Add foreign key constraints to table "ComponentMapping".                                   */
alter table "ComponentMapping"
	add constraint "Mapping_ComponentMapping_FK1" foreign key (
		"IDMapping")
	 references "Mapping" (
		"IDMapping") on update no action on delete cascade  

go

/* Add foreign key constraints to table "CatDataFlowColumns".                                 */
alter table "CatDataFlowColumns"
	add constraint "CatDataFlow_CatDataFlowColumns_FK1" foreign key (
		"IDDataFlow")
	 references "CatDataFlow" (
		"IDDataFlow") on update no action on delete cascade  

go

/* Add foreign key constraints to table "CatCube".                                            */
alter table "CatCube"
	add constraint "CatCategory_CatCube_FK1" foreign key (
		"IDCat")
	 references "CatCategory" (
		"IDCat") on update no action on delete no action  

go

/* Add foreign key constraints to table "Loading".                                            */
alter table "Loading"
	add constraint "CatCube_Loading_FK1" foreign key (
		"IDCube")
	 references "CatCube" (
		"IDCube") on update no action on delete cascade  

go

/* Add foreign key constraints to table "CatDim".                                             */
alter table "CatDim"
	add constraint "CatCube_CatDim_FK1" foreign key (
		"IDCube")
	 references "CatCube" (
		"IDCube") on update no action on delete cascade  

go

/* Add foreign key constraints to table "CatDataFlow".                                        */
alter table "CatDataFlow"
	add constraint "CatCube_CatDataFlow_FK1" foreign key (
		"IDCube")
	 references "CatCube" (
		"IDCube") on update no action on delete no action  

go

/* Add foreign key constraints to table "CatAttDim".                                          */
alter table "CatAttDim"
	add constraint "CatAtt_CatAttDim_FK1" foreign key (
		"IDAtt")
	 references "CatAtt" (
		"IDAtt") on update no action on delete cascade  

go

alter table "CatAttDim"
	add constraint "CatDim_CatAttDim_FK1" foreign key (
		"IDDim")
	 references "CatDim" (
		"IDDim") on update no action on delete no action  

go

/* Add foreign key constraints to table "CatAtt".                                             */
alter table "CatAtt"
	add constraint "CatCube_CatAtt_FK1" foreign key (
		"IDCube")
	 references "CatCube" (
		"IDCube") on update no action on delete cascade  

go

/* Add foreign key constraints to table "Mapping".                                            */
alter table "Mapping"
	add constraint "CatCube_Mapping_FK1" foreign key (
		"IDCube")
	 references "CatCube" (
		"IDCube") on update no action on delete cascade  

go

/* Add foreign key constraints to table "CatCategory".                                        */
alter table "CatCategory"
	add constraint "CatCategory_CatCategory_FK1" foreign key (
		"IDParent")
	 references "CatCategory" (
		"IDCat") on update no action on delete no action

go

/* Add foreign key constraints to table "localised_CatCategory".                              */
alter table "localised_CatCategory"
	add constraint "CatCategory_localised_CatCategory_FK1" foreign key (
		"IDMember")
	 references "CatCategory" (
		"IDCat") on update no action on delete cascade  

go

/* Add foreign key constraints to table "CatMeas".                                            */
alter table "CatMeas"
	add constraint "CatCube_CatMeas_FK1" foreign key (
		"IDCube")
	 references "CatCube" (
		"IDCube") on update no action on delete cascade  

go

/* Add foreign key constraints to table "UploadOps".                                          */
alter table "UploadOps"
	add constraint "CatCube_UploadOps_FK1" foreign key (
		"IDCube")
	 references "CatCube" (
		"IDCube") on update no action on delete no action  

go


/* This is the end of the Microsoft Visual Studio generated SQL DDL script.                   */
